#BlueJ class context
comment0.params=
comment0.target=StackTest()
comment0.text=\r\n\ Default\ constructor\ for\ test\ class\ StackTest\r\n
comment1.params=
comment1.target=void\ setUp()
comment1.text=\r\n\ Sets\ up\ the\ test\ fixture.\r\n\r\n\ Called\ before\ every\ test\ case\ method.\r\n
comment10.params=
comment10.target=void\ testIsEmpty1()
comment10.text=\r\n\ create\ a\ new\ empty\ stack\ \r\n\ then\ run\ the\ isEmpty\ method\ \r\n\ expected\ result\ is\ true.\ \r\n
comment11.params=
comment11.target=void\ testIsEmpty2()
comment11.text=\r\n\ create\ a\ new\ stack\ add\ 1\ item\ \r\n\ call\ isEmpty\ method\ \r\n\ expected\ result\ if\ false.\ \r\n
comment12.params=
comment12.target=void\ testInnerNodeConstructor()
comment12.text=\r\n\ test\ the\ inner\ Node\ classes\ constructor\r\n
comment13.params=
comment13.target=void\ testInnerNodeGetElement()
comment13.text=\r\n\ test\ the\ inner\ classes\ getElement\ method\ using\ reflection\r\n
comment14.params=
comment14.target=void\ testInnerNodeGetPrevious()
comment14.text=\r\n\ test\ the\ Inner\ nodes\ getPrevious\ method\ using\ relfection\r\n
comment2.params=
comment2.target=void\ tearDown()
comment2.text=\r\n\ Tears\ down\ the\ test\ fixture.\r\n\r\n\ Called\ after\ every\ test\ case\ method.\r\n
comment3.params=
comment3.target=void\ testNoArgStackConstructor()
comment3.text=\r\n\ need\ to\ check\ if\ this\ is\ accesing\ the\ correct\ privates.\ \r\n
comment4.params=
comment4.target=void\ testGetSize()
comment4.text=\r\n\ test\ the\ getSize\ method\ of\ the\ stack\r\n\ \ expected\ result\ 0\ \r\n
comment5.params=
comment5.target=void\ testPush()
comment5.text=\r\n\ create\ a\ stack\ the\ add\ a\ new\ node\ to\ the\ stack.\ \r\n\ Then\ use\ prevously\ tested\ getSize()\ to\ find\ size\ of\ stack\ \r\n\ expected\ result\ 1.\ \r\n
comment6.params=
comment6.target=void\ testTop1()
comment6.text=\r\n\ create\ new\ stack\ and\ push\ a\ new\ node\ on\ top\ it.\ \r\n\ call\ the\ top\ method\ and\ test\ the\ result\ \r\n\ expected\ result\ is\ "test\ data".\r\n
comment7.params=
comment7.target=void\ testTop2()
comment7.text=\r\n\ create\ new\ empty\ stack\ \r\n\ call\ the\ top\ method\ and\ test\ the\ result\ \r\n\ expected\ result\ is\ an\ exception\ \r\n
comment8.params=
comment8.target=void\ testPop1()
comment8.text=\r\n\ create\ new\ stack\ and\ push\ a\ new\ node\ on\ top\ it.\r\n\ call\ pop\ method\ to\ remove\ the\ stack\ item\ \r\n\ then\ test\ for\ returned\ element\ and\ size\ of\ stack.\ \r\n
comment9.params=
comment9.target=void\ testPop2()
comment9.text=\r\n\ create\ a\ new\ empty\ stack.\r\n\ call\ pop\ method\ to\ remove\ the\ stack\ item\ \r\n\ expected\ result\ is\ an\ exception.\ \ \r\n
numComments=15
